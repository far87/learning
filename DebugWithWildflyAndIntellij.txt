** Debug applicazione su server esterno Wildfly con IDE Intellij

Prima di procedere a debuggare una applicazione è necessario verificare che la stessa applicazione sia stata eseguita dalla jvm per essere debuggata: l'applicazione deve esporre una porta cui collegarsi per il debug.

A tal proposito dunque , l'istanza wildfly deve essere avviata ina una precisa configurazione: 

occorre dunque modificare il file standalone.cong.bat aggiungendo all'istruzione set "JAVA_OPTS= i seguenti attributi: -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n

Dunque l'istruzione set JAVA_OPTS diventa, nel caso mio in questione :

set "JAVA_OPTS=-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n -Xms256M -Xmx4096M -XX:MetaspaceSize=128M -XX:MaxMetaspaceSize=1024m".

Una volta avviato l'application server con questa configurazione sarà possibile collegarci alla porta di debug tramite Itellij:

Aprire una nuova configuration di tipo remote jvm debug, fornire l'host su cui gira il nostro application server, nel caso mio sarà localhost, e la porta dove è attivo il debug, nel caso mio la 8000, 

e gli altri campi Debugger mode : Attach to remote jvm , Transport : Socket

Il classpath dell'app dovrebbe apparire in automatico.

A questo punto , attivando il debug e impostando i dovuti breakpoints , dovremmo riuscire a intercettaree e seguire le chiamate effettuate sul back end. 

NB: se le impostazione di debug sono state correttamente impostate su wildfly , allo start appariranno subito alla voce JAVA_OPTS: ... della console.